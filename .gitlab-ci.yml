# Using the node alpine image
image: node:10.15.2

stages:
  - install
  - test
  - publish

# JOBS

Install:
  stage: install
  script:
    - npm config set registry https://manomano.jfrog.io/manomano/api/npm/npm-all/
    - npm config set //manomano.jfrog.io/manomano/api/npm/npm-all/:_authToken $BASE64_ARTIFACTORY_TOKEN
    - npm config set email whatever@manomano.com
    - npm config set always-auth true
    - yarn
    - yarn bootstrap
  artifacts:
    paths:
      - node_modules/
      - packages/babel/node_modules
      - packages/eslint/node_modules
      - packages/utils/node_modules
    expire_in: 10 minutes

Test:
  stage: test
  script:
    - yarn lint
    - yarn test

Publish:
  stage: publish
  only:
    - master

  script:
    # configure git
    - git remote set-url origin https://${GITLAB_CI_USER}:${GITLAB_CI_TOKEN}@git.manomano.tech/core-utils/js-tools.git
    - git config user.email "$GIT_AUTHOR_EMAIL"
    - git config user.name "$GIT_AUTHOR_NAME"

    # get last master branch and rebase
    - git checkout master
    - git pull

    # bump every sub-packages to a new version (following conventional commits) and add a git tag needed by lerna-publish (next job)
    # do not rename lerna-version
    - npm run lerna-version

    # publish every sub-packages that need to be published (checking last tag provided by lerna-version)
    # do not rename publish
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - npm run publish

    # bump version in the main package, and add one tag
    - npx standard-version

    # update yarn.lock in every sub-packages and main packages with the new version
    - rm packages/*/yarn.lock yarn.lock
    - yarn install-lerna
    - git add packages/*/yarn.lock yarn.lock
    - git commit -m "chore(release):[skip ci] upgrade yarn.lock"

    - git push
